set tags=./tags

" Leader Mappigns
let mapleader = "\<Space>"
nmap <leader>vr :tabedit $MYVIMRC<cr>
nmap <leader>so :source $MYVIMRC<cr>
nmap <leader>F :Files .<cr>

" Custom Mappings
imap jk <esc>
imap kj <esc>
imap <C-s> <esc>:w<cr>

" Easily move lines and blocks up and down
nnoremap <A-j> :m .+1<CR>==
nnoremap <A-k> :m .-2<CR>==
inoremap <A-j> <Esc>:m .+1<CR>==gi
inoremap <A-k> <Esc>:m .-2<CR>==gi
vnoremap <A-j> :m '>+1<CR>gv=gv
vnoremap <A-k> :m '<-2<CR>gv=gv

" Prettier config
let g:prettier#exec_cmd_async = 1
let g:prettier#autoformat_config_present = 1
let g:prettier#autoformat_require_pragma = 0
" let g:prettier#quickfix_enabled = 0
" autocmd TextChanged,InsertLeave *.js,*.jsx,*.mjs,*.ts,*.tsx,*.css,*.less,*.scss,*.json,*.graphql,*.md,*.vue,*.svelte,*.yaml,*.html PrettierAsync

" syntastic config
" call janus#disable_plugin('syntastic')
let g:syntastic_mode_map = { "mode": "active" }
let g:syntastic_javascript_eslint_exe='$(npm bin)/eslint'
let g:syntastic_javascript_eslint_exec = 'npm'
let g:syntastic_javascript_checkers=['eslint']
let g:jsx_ext_required = 0
" let g:syntastic_debug=1

" make directories for new files where they don't exist
augroup BWCCreateDir
    autocmd!
    autocmd BufWritePre * if expand("<afile>")!~#'^\w\+:/' && !isdirectory(expand("%:h")) | execute "silent! !mkdir -p ".shellescape(expand('%:h'), 1) | redraw! | endif
augroup END

" JS language options
"
" Conceals
let g:javascript_conceal_function             = "Æ’"
let g:javascript_conceal_null                 = "Ã¸"
let g:javascript_conceal_this                 = "@"
let g:javascript_conceal_return               = "â‡š"
let g:javascript_conceal_undefined            = "Â¿"
let g:javascript_conceal_NaN                  = "â„•"
let g:javascript_conceal_prototype            = "Â¶"
let g:javascript_conceal_static               = "â€¢"
let g:javascript_conceal_super                = "Î©"
let g:javascript_conceal_arrow_function       = "â‡’"
let g:javascript_conceal_noarg_arrow_function = "ðŸž…"
let g:javascript_conceal_underscore_arrow_function = "ðŸž…"

map <leader>l :exec &conceallevel ? "set conceallevel=0" : "set conceallevel=1"<CR>

